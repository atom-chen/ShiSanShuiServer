-- 返回 STEP_SUCCEED 流程继续
-- 返回 STEP_FAILED 流程终止
require "common.socket"

local function logic_do_deal(dealer, msg)
    LOG_DEBUG("Run LogicStep do_deal...PLAYER_NUMBER:%d", PLAYER_NUMBER)
    local t1 = math.floor(socket.gettime()*1000)
    local stGameState = GGameState
    local stRoundInfo = GRoundInfo
    local stDealerCardGroup = dealer:GetDealerCardGroup()
    -- 洗牌
    stDealerCardGroup:PrepareDeal()

    -- 发牌
    local function do_deal()
        for i=1, PLAYER_NUMBER do
            local stPlayer = stGameState:GetPlayerByChair(i)
            if stPlayer then
                local stPlayerCardGroup = stPlayer:GetPlayerCardGroup()
                local cards = {}
                for j=1, MAX_HAND_CARD_NUM do
                    local nCard = stDealerCardGroup:GetOneCard()
                    -- stPlayerCardGroup:AddCard(nCard)
                    --判断是否有码牌
                    if GGameCfg.GameSetting.bSupportBuyCode and IsCodeCard(nCard) then
                        stPlayerCardGroup:SetHasCodeCard(true)
                        dealer:SetCodeCardChairID(stPlayer:GetChairID())
                    end
                    table.insert(cards, nCard)
                end
                --获取特殊牌型
                local nSpecialType = LibSpCardLogic:GetSpecialType(cards)
                LOG_DEBUG("do_deal======p%d, nSpecialType:%d", i, nSpecialType)
                stPlayerCardGroup:SetSpecialType(nSpecialType)
                --特殊牌型人数+1
                if nSpecialType > GStars_Special_Type.PT_SP_NIL then
                    dealer:AddSpecialNums()
                end
                stPlayerCardGroup:AddCardGroup(cards)
                -- CSMessage.NotifyPlayerDeal(stPlayer)
            end
        end
    end

    --测试版
    local function test_deal()
        -- local tempCards = {
        --     { 0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,0x0E, },   --方块 2 - A
        --     { 0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E, },   --梅花 2 - A
        --     { 0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,0x2E, },   --红桃 2 - A
        --     { 0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,0x3E, },    --黑桃 2 - A
        -- }

        local tempCards = {
            -- --至尊青龙
            -- {0x0a,0x0b,0x0c,0x0d,0x0e,0x02,0x03,0x04,0x05,0x06,0x07,0x5F,0x4F},
            -- {0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E},

            -- --一条龙
            -- {0x02,0x03,0x04,0x05,0x06,0x0a,0x0b,0x0c,0x0d,0x1e,0x07,0x09,0x08},

            -- --四套三条：4副相同的三张牌加一张杂牌，举例：AAA、BBB、CCC、DDD、E
            -- {0x23,0x04,0x14,0x24,0x02,0x12,0x22,0x03,0x13,0x05,0x15,0x25,0x17},
            -- {0x13,0x23,0x04,0x02,0x12,0x22,0x03,0x14,0x24,0x05,0x15,0x25,0x32},

            -- --三炸弹：3副炸弹加一张杂牌，举例：AAAA、BBBB、CCCC、E
            -- {0x02,0x12,0x22,0x32,0x03,0x13,0x23,0x33,0x04,0x14,0x24,0x34,0x15},
            -- {0x02,0x12,0x22,0x32,0x03,0x13,0x23,0x33,0x04,0x14,0x24,0x34,0x02},

            -- --三皇五帝：2张五同加一张三条，举例：AAAAA、BBBBB、CCC
            -- {0x02,0x12,0x22,0x32,0x02,0x03,0x13,0x23,0x33,0x03,0x04,0x14,0x24},
            -- {0x02,0x12,0x22,0x32,0x02,0x03,0x13,0x23,0x33,0x03,0x04,0x14,0x25},

            -- --十二皇族：12张牌全是J、Q、K、A，剩余一张可以是任意牌，举例：JQKA、JQKA、JQKA，5
            -- {0x0b,0x0c,0x0d,0x1b,0x1c,0x2b,0x2c,0x3b,0x3e,0x2e,0x2d,0x1e,0x3c},
            -- {0x0b,0x0c,0x0d,0x1b,0x1c,0x2b,0x2c,0x3b,0x3e,0x2e,0x2d,0x1e,0x32},

            -- --三同花顺：三墩分别都是同花顺，举例：同花23456、同花78910J、同花JQK
            -- {0x14,0x15,0x16,0x2b,0x2c,0x02,0x03,0x04,0x05,0x06,0x12,0x13,0x2d},
            -- {0x02,0x13,0x14,0x05,0x06,0x07,0x32,0x33,0x34,0x15,0x16,0x03,0x04},

            -- --六六大顺：13张牌出现6张相同牌，举例：13张牌至少含有6张相同牌型
            -- {0x02,0x12,0x22,0x32,0x32,0x32,0x0b,0x0a,0x0c,0x0d,0x0e,0x5F,0x4F},

            -- --全大：13张牌数字都为8----A，举例：最小为8，最大为A范围内的牌
            -- {0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x1b,0x1c,0x2b,0x2e,0x3c,0x3b},
            -- {0x09,0x0a,0x1a,0x2a,0x39,0x3b,0x3d,0x2c,0x1c,0x0c,0x0e,0x3c,0x2e},

            -- --全小：13张牌数字都为2----8，举例：最小为2，最大为8范围内的牌
            -- {0x08,0x07,0x17,0x16,0x15,0x18,0x28,0x38,0x26,0x25,0x24,0x23,0x13},
            -- {0x02,0x13,0x15,0x24,0x26,0x27,0x17,0x34,0x36,0x33,0x32,0x23,0x14},

            -- --凑一色：13张牌都是方块、红心或者黑桃、梅花
            -- {0x12,0x33,0x36,0x38,0x17,0x16,0x15,0x3a,0x1d,0x3d,0x3e,0x1b,0x35},

            -- --五对冲三：5个一对加三张相同牌型，举例：AA、BB、CC、DD、EE、FFF
            -- {0x02,0x12,0x03,0x13,0x04,0x14,0x05,0x15,0x07,0x17,0x28,0x38,0x18},

            -- --6对半：6个对子加一张杂牌，举例：AA、BB、CC、DD、EE、FF、G
            -- {0x02,0x12,0x03,0x13,0x04,0x14,0x05,0x15,0x07,0x17,0x28,0x38,0x19},

            --三顺子：三墩都是顺子牌，举例：23456、678910、JQK牌型，且至少有一墩非同花
            -- {0x02,0x03,0x04,0x06,0x05,0x07,0x08,0x09,0x0a,0x0b,0x12,0x23,0x14},
            -- {0x22,0x23,0x24,0x25,0x26,0x32,0x33,0x34,0x35,0x36,0x15,0x16,0x37},

            -- --三同花：
            -- {0x03,0x05,0x07,0x0a,0x0b,0x25,0x28,0x2a,0x2d,0x2e,0x34,0x35,0x36},
            -- {0x03,0x0a,0x09,0x0d,0x0e,0x03,0x05,0x06,0x07,0x0a,0x0b,0x0c,0x0d},
            -- {28, 44, 60, 14, 62, 40, 56, 39, 55, 42, 57, 20, 2},
            -- {12, 11, 7, 5, 4, 30, 26, 25, 24, 22, 38, 21, 51},
            -- {0x02,0x22,0x24,0x28,0x38,0x19,0x29,0x09,0x0a,0x2a,0x2c,0x1c,0x2e},
            -- {35,60,58,2,23,34,55,18,51,22,41,21,0x5F},
            -- {35,60,58,2,23,34,55,18,51,22,41,21,0x5F},

            -- --水庄结算:普通牌型和特殊蹲位加分 打枪 全垒打
            -- {0x03,0x04,0x05,0x06,0x07,0x13,0x14,0x15,0x16,0x17,0x4f,0x5f,0x18},
            -- -- {0x0e,0x1e,0x2e,0x3e,0x0d,0x1d,0x2d,0x3d,0x0c,0x0c,0x1c,0x3c,0x02},
            -- -- {0x12,0x22,0x32,0x02,0x03,0x04,0x27,0x28,0x08,0x37,0x38,0x35,0x34},
            -- -- {0x23,0x24,0x25,0x26,0x29,0x2a,0x2b,0x2c,0x06,0x07,0x08,0x0a,0x0d},

            -- {0x23,0x13,0x05,0x05,0x35,0x17,0x28,0x29,0x2a,0x0c,0x0d,0x2d,0x3e},


            -- {0x38,0x3a,0x5f,0x22,0x23,0x2c,0x2d,0x2e,0x12,0x13,0x17,0x1c,0x1d},
            -- {0x03,0x04,0x05,0x06,0x07,0x13,0x14,0x15,0x16,0x17,0x18,0x4f,0x5f},
            -- {0x14,0x24,0x1e,0x03,0x07,0x07,0x08,0x0b,0x06,0x16,0x36,0x3a,0x0a},
            -- {18, 35, 20, 5, 22, 55, 8, 26, 59, 28, 13, 14, 46},
            -- {0x03,0x04,0x05,0x06,0x07,0x13,0x14,0x15,0x16,0x17,0x18,0x4f,0x5f},

            -- {0x02,0x32,0x24,0x28,0x18,0x19,0x09,0x29,0x0a,0x2a,0x3c,0x0c,0x3e},
            -- {0x1e,0x17,0x25,0x04,0x09,0x0b,0x0c,0x0e,0x34,0x35,0x38,0x3d,0x4f},
            -- {0x4f,0x5f,0x05,0x15,0x14,0x34,0x0b,0x2b,0x38,0x08,0x39,0x19,0x09},
            -- {0x2c,0x0a,0x37,0x29,0x3a,0x1b,0x3c,0x3d,0x3e,0x32,0x5f,0x34,0x35},
            -- {0x03,0x36,0x0d,0x02,0x33,0x04,0x35,0x2e,0x1a,0x2a,0x3a,0x4f,0x5f},
            -- {0x2d,0x33,0x22,0x3e,0x3a,0x39,0x38,0x37,0x0a,0x08,0x05,0x03,0x02},
            -- {0x04,0x05,0x06,0x27,0x38,0x29,0x3A,0x2A,0x3B,0x0C,0x2C,0x2D,0x4F},
            {0x02,0x12,0x22,0x26,0x27,0x28,0x29,0x2A,0x33,0x23,0x13,0x0c,0x1c},
        }
        for i=1, PLAYER_NUMBER do
            local stPlayer = stGameState:GetPlayerByChair(i)
            if stPlayer then
                local stPlayerCardGroup = stPlayer:GetPlayerCardGroup()
                local cards = tempCards[i]
                LOG_DEBUG("test_deal...p%d, cards:%s", i, TableToString(cards))
                if cards and #cards >= MAX_HAND_CARD_NUM then
                    for j=1, MAX_HAND_CARD_NUM do
                        local nCard = cards[j]
                        -- stPlayerCardGroup:AddCard(nCard)
                        stDealerCardGroup:DelOneCard(nCard)
                        --判断是否有码牌
                        if GGameCfg.GameSetting.bSupportBuyCode and IsCodeCard(nCard) then
                            stPlayerCardGroup:SetHasCodeCard(true)
                            dealer:SetCodeCardChairID(stPlayer:GetChairID())
                        end
                    end
                    --获取特殊牌型
                    local nSpecialType = LibSpCardLogic:GetSpecialType(cards)
                    LOG_DEBUG("test_deal===have===p%d, nSpecialType:%d", i, nSpecialType)
                    stPlayerCardGroup:SetSpecialType(nSpecialType)
                    --特殊牌型人数+1
                    if nSpecialType > GStars_Special_Type.PT_SP_NIL then
                        dealer:AddSpecialNums()
                    end
                    stPlayerCardGroup:AddCardGroup(cards)
                else
                    local cards = {}
                    for j=1, MAX_HAND_CARD_NUM do
                        local nCard = stDealerCardGroup:GetOneCard()
                        -- stPlayerCardGroup:AddCard(nCard)
                        --判断是否有码牌
                        if GGameCfg.GameSetting.bSupportBuyCode and IsCodeCard(nCard) then
                            stPlayerCardGroup:SetHasCodeCard(true)
                            dealer:SetCodeCardChairID(stPlayer:GetChairID())
                        end
                        table.insert(cards, nCard)
                    end
                    --获取特殊牌型
                    local nSpecialType = LibSpCardLogic:GetSpecialType(cards)
                    LOG_DEBUG("test_deal===auto===p%d, nSpecialType:%d", i, nSpecialType)
                    stPlayerCardGroup:SetSpecialType(nSpecialType)
                    --特殊牌型人数+1
                    if nSpecialType > GStars_Special_Type.PT_SP_NIL then
                        dealer:AddSpecialNums()
                    end
                    stPlayerCardGroup:AddCardGroup(cards)
                end
                -- CSMessage.NotifyPlayerDeal(stPlayer)
            end
        end
    end
    -- --测试版
    -- test_deal()

    -- --正常版本
    do_deal()

    -- 通知玩家发牌了
    local nDealerCardLeft = stDealerCardGroup:GetCurrentLength()
    for i=1,PLAYER_NUMBER do
        local stPlayer = stGameState:GetPlayerByChair(i)
        if stPlayer then
            CSMessage.NotifyPlayerDeal(stPlayer, nDealerCardLeft)
        end
    end
    

    --推荐牌型由服务端控制是否下发(game_config_11.json配置字段nNeedRecommend表示，0不下发 1下发)
    if GGameCfg.nNeedRecommend ~= 0 then
        for i=1,PLAYER_NUMBER do
            local stPlayer = stGameState:GetPlayerByChair(i)
            if stPlayer then
                local stPlayerCardGroup = stPlayer:GetPlayerCardGroup()
                local stCards = stPlayerCardGroup:ToArray()
                stPlayerCardGroup:SetRecommendCards()

                LOG_DEBUG("logic_do_deal...uid:%d, p%d, stCards:%s\n, ",stPlayer:GetUin(), i, TableToString(stCards))

                CSMessage.NotifyPlayerRecommend(stPlayer)
            end
        end
    end
    local t2 = math.floor(socket.gettime()*1000)

    -- 通知玩家发牌了
    LOG_DEBUG("==============subtime:%d, nCurrJu:%d, nNeedRecommend:%d", (t2-t1), GGameCfg.nCurrJu, GGameCfg.nNeedRecommend)

    --进入下一阶段
    dealer:ToNextStage()

    return STEP_SUCCEED
end


return logic_do_deal
